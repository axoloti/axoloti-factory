<objdefs>
   <obj.normal id="script" uuid="db5428f68ac6798b48e7ca4c74c152fc01fe6727" sha="24cae6cc95a2ace0ac855159f67b59a54efe7146">
      <upgradeSha>f18e1c01ff957d5bd75e66553de6f022598888bb</upgradeSha>
      <sDescription>script with 2 inputs and 2 outputs, running in a separate thread</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>script.axh</helpPatch>
      <inlets>
         <frac32 name="in1_" description="in1"/>
         <frac32 name="in2_" description="in2"/>
      </inlets>
      <outlets>
         <frac32 name="out1_" description="out1"/>
         <frac32 name="out2_" description="out2"/>
      </outlets>
      <displays/>
      <params/>
      <attribs>
         <text name="script"/>
      </attribs>
      <code.declaration><![CDATA[int32_t in1,in2;
int32_t out1,out2;
msg_t ThreadX2(){
attr_script
}
static THD_FUNCTION(ThreadX, arg) {
((attr_parent *)arg)->ThreadX2();
}
WORKING_AREA(waThreadX, 1024);
Thread *Thd;
]]></code.declaration>
      <code.init><![CDATA[in1=0;in2=0;out1=0;out2=0;
  Thd = chThdCreateStatic(waThreadX, sizeof(waThreadX),
                    NORMALPRIO, ThreadX, (void *)this);
]]></code.init>
      <code.dispose><![CDATA[chThdTerminate(Thd);
chThdWait(Thd);
]]></code.dispose>
      <code.krate><![CDATA[outlet_out1__ = this->out1;
outlet_out2__ = this->out2;
this->in1 = inlet_in1__;
this->in2 = inlet_in2__;
]]></code.krate>
   </obj.normal>
</objdefs>
