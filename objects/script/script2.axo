<objdefs appVersion="2.0.0">
   <obj.normal id="script2" uuid="d39e743cf47c9221f4e99c133430148cf74c68c5" sha="362a4413ceaefbe716480bf8f9c62eb3587fe6c0">
      <upgradeSha>4ff07e259d2eb13dc0829312e7ab0427616949aa</upgradeSha>
      <sDescription>script with 2 inputs and 2 outputs, running in a separate thread, you must define &quot;void setup(void){}&quot; and &quot;void loop(void)&quot;</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>script.axh</helpPatch>
      <inlets>
         <frac32 name="in1_" description="in1"/>
         <frac32 name="in2_" description="in2"/>
      </inlets>
      <outlets>
         <frac32 name="out1_" description="out1"/>
         <frac32 name="out2_" description="out2"/>
      </outlets>
      <displays/>
      <params/>
      <attribs>
         <text name="script"/>
      </attribs>
      <file-depends/>
      <includes/>
      <depends/>
      <modules/>
      <code.declaration><![CDATA[int32_t in1,in2;
int32_t out1,out2;

attr_script

msg_t ThreadX2(){
  setup();
  while(!chThdShouldTerminate()){
     loop();
     chThdSleepMilliseconds(1);
  }
  chThdExit((msg_t)0);
}

static THD_FUNCTION(ThreadX, arg) {
((attr_parent *)arg)->ThreadX2();
}
WORKING_AREA(waThreadX, 1024);
Thread *Thd;]]></code.declaration>
      <code.init><![CDATA[in1=0;in2=0;out1=0;out2=0;
  Thd = chThdCreateStatic(waThreadX, sizeof(waThreadX),
                    NORMALPRIO, ThreadX, (void *)this);]]></code.init>
      <code.dispose><![CDATA[chThdTerminate(Thd);
chThdWait(Thd);
]]></code.dispose>
      <code.krate><![CDATA[outlet_out1__ = this->out1;
outlet_out2__ = this->out2;
this->in1 = inlet_in1__;
this->in2 = inlet_in2__;]]></code.krate>
   </obj.normal>
</objdefs>