<objdefs appVersion="2.0.0">
   <obj.normal id="cc" uuid="6096d217701cbdf251a9ab6ba029af78c5722a56" sha="394ff9a0feb281bfb1c335bba571a5ea0daa75b9">
      <upgradeSha>ebe42ea91b565ab7af7a8977642a42a30c77c9c4</upgradeSha>
      <sDescription>Receives Midi Continuous Controller messages</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>midi_in.axh</helpPatch>
      <inlets/>
      <outlets>
         <frac32.positive name="midiCC" description="midi CC 0-63.5"/>
         <bool32.pulse name="trig" description="trigger output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs>
         <spinner name="cc" MinValue="0" MaxValue="127" DefaultValue="0"/>
         <spinner name="default" MinValue="0" MaxValue="127" DefaultValue="0"/>
      </attribs>
      <file-depends/>
      <includes/>
      <depends/>
      <modules/>
      <code.declaration><![CDATA[int32_t ccv;
int32_t ntrig;]]></code.declaration>
      <code.init><![CDATA[ccv = attr_default << 20;]]></code.init>
      <code.krate><![CDATA[outlet_midiCC= ccv;
outlet_trig = ntrig;
ntrig = 0;
]]></code.krate>
      <code.midihandler><![CDATA[if (port!=attr_midiport) return;
if ((status == attr_midichannel + MIDI_CONTROL_CHANGE)&&(data1 == attr_cc)) { ccv = data2<<20; ntrig = 1;}]]></code.midihandler>
   </obj.normal>
</objdefs>