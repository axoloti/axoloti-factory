<objdefs appVersion="2.0.0">
   <obj.normal id="cc i" uuid="614eb76edef2b43632fa1fcda25aab54f821daf6" sha="74a847b235a3e6e117925d2dadafaa6f6c84b9b">
      <upgradeSha>7f43740c4d7e4145d07d22ce3cf4516a7cbd4c73</upgradeSha>
      <sDescription>Receives Midi Continuous Controller messages, integer output (0-127)</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>midi_in.axh</helpPatch>
      <inlets/>
      <outlets>
         <int32.positive name="midiCC" description="midi CC 0-127"/>
         <bool32.pulse name="trig" description="trigger output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs>
         <spinner name="cc" MinValue="0" MaxValue="127" DefaultValue="0"/>
         <spinner name="default" MinValue="0" MaxValue="127" DefaultValue="0"/>
      </attribs>
      <file-depends/>
      <includes/>
      <depends/>
      <modules/>
      <code.declaration><![CDATA[int32_t ccv;
int32_t ntrig;]]></code.declaration>
      <code.init><![CDATA[ccv = attr_default;]]></code.init>
      <code.krate><![CDATA[outlet_midiCC= ccv;
outlet_trig = ntrig;
ntrig = 0;
]]></code.krate>
      <code.midihandler><![CDATA[if (port!=attr_midiport) return;
if ((status == attr_midichannel + MIDI_CONTROL_CHANGE)&&(data1 == attr_cc)) { ccv = data2; ntrig = 1;}]]></code.midihandler>
   </obj.normal>
</objdefs>