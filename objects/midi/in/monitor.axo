<objdefs appVersion="2.0.0">
   <obj.normal id="monitor" uuid="b51863ca-6afa-4d29-acfd-c8c2fe06cb16">
      <sDescription>Dumps incoming MIDI data to the log. Useful for diagnostics, but do not leave it in a patch for real playing! Occasionally causes buffer underruns...</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <providesModulationSource>false</providesModulationSource>
      <rotatedParams>false</rotatedParams>
      <inlets/>
      <outlets/>
      <displays/>
      <params>
         <bool32.tgl name="ControlChange" description="Enable to monitor Control Change messages"/>
         <bool32.tgl name="Note" description="Enable to monitor Note On/Off messages"/>
         <bool32.tgl name="ProgramChange" description="Enable to monitor Program Change messages"/>
         <bool32.tgl name="Bend" description="Enable to monitor Pitch Bend messages"/>
         <bool32.tgl name="PolyPressure" description="Enable to monitor Polyphonic Pressure messages"/>
      </params>
      <attribs/>
      <file-depends/>
      <includes/>
      <depends/>
      <modules/>
      <code.declaration><![CDATA[bool p_Note;
bool p_PolyPressure;
bool p_ControlChange;
bool p_ProgramChange;
bool p_Bend;]]></code.declaration>
      <code.krate><![CDATA[p_Note=param_Note;
p_PolyPressure=param_PolyPressure;
p_ControlChange=param_ControlChange;
p_ProgramChange=param_ProgramChange;
p_Bend=param_Bend;]]></code.krate>
      <code.midihandler><![CDATA[switch (status & 0xf0) {
	case MIDI_NOTE_ON: 
	if (p_Note)
		LogTextMessage("NoteOn  p%2D ch%2D n%3D v%3D", 1 + port, 1 + (status & 0x0F), data1, data2);
		break;
	case MIDI_NOTE_OFF: 
	if (p_Note)
		LogTextMessage("NoteOff p%2D ch%2D n%3D v%3D", 1 + port, 1 + (status & 0x0F), data1, data2);
		break;
	case MIDI_POLY_PRESSURE: 
	if (p_PolyPressure)
		LogTextMessage("PolyPrs p%2D ch%2D n%3D v%3D", 1 + port, 1 + (status & 0x0F), data1, data2);
		break;
	case MIDI_CONTROL_CHANGE: 
	if (p_ControlChange)
		LogTextMessage("Control p%2D ch%2D cc%3D v%3D", 1 + port, 1 + (status & 0x0F), data1, data2);
		break;
	case MIDI_PROGRAM_CHANGE: 
	if (p_ProgramChange)
		LogTextMessage("PgmChg  p%2D ch%2D pgm%3D", 1 + port, 1 + (status & 0x0F), data1, data2);
		break;
	case MIDI_PITCH_BEND: 
	if (p_Bend)
		LogTextMessage("PitchBnd p%2D ch%2D v%3D v%3D", 1 + port, 1 + (status & 0x0F), data1, data2);
		break;
	default:
	;
}]]></code.midihandler>
   </obj.normal>
</objdefs>