<objdefs appVersion="2.0.0">
   <obj.normal id="write sdram" uuid="5ae03f8d7b815edcfc40585d8bbac2ed48460fba" sha="63d300dd732507b7237b5fd45676bc14c9e77ce7">
      <upgradeSha>f23229ed5bcfe9be1e32cc2bdef89205e2914866</upgradeSha>
      <sDescription>delayline definition, read it with &quot;delay/read&quot; objects referencing the instance name of this object</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>delay.axh</helpPatch>
      <inlets>
         <frac32buffer name="in" description="wave input"/>
      </inlets>
      <outlets/>
      <displays/>
      <params/>
      <attribs>
         <combo name="size">
            <MenuEntries>
               <string>256 (5.33ms)</string>
               <string>512 (10.66ms)</string>
               <string>1024 (21.33ms)</string>
               <string>2048 (42.66ms)</string>
               <string>4096 (85.33ms)</string>
               <string>8192 (170ms)</string>
               <string>16384 (341ms)</string>
               <string>32768 (682ms)</string>
               <string>65536 (1.36s)</string>
               <string>131072 (2.73s)</string>
               <string>262144 (5.46s)</string>
               <string>524288 (10.9s)</string>
               <string>1048576 (21.8s)</string>
               <string>2097152 (43.7s)</string>
            </MenuEntries>
            <CEntries>
               <string>8</string>
               <string>9</string>
               <string>10</string>
               <string>11</string>
               <string>12</string>
               <string>13</string>
               <string>14</string>
               <string>15</string>
               <string>16</string>
               <string>17</string>
               <string>18</string>
               <string>19</string>
               <string>20</string>
               <string>21</string>
            </CEntries>
         </combo>
      </attribs>
      <file-depends/>
      <includes/>
      <depends/>
      <modules/>
      <code.declaration><![CDATA[static const uint32_t LENGTHPOW = (attr_size);
static const uint32_t LENGTH = (1<<attr_size);
static const uint32_t LENGTHMASK = ((1<<attr_size)-1);
int16_t *array;
uint32_t writepos;]]></code.declaration>
      <code.init><![CDATA[array = (int16_t *)ax_malloc(LENGTH * sizeof(int16_t), mem_type_hint_large);
if (!array) return error_outOfMemory;
int i;
writepos = 0;
for(i=0;i<LENGTH;i++) array[i] = 0;]]></code.init>
      <code.dispose><![CDATA[ax_free(array);]]></code.dispose>
      <code.srate><![CDATA[  writepos = (writepos + 1)&LENGTHMASK;
   array[writepos] = __SSAT(inlet_in>>14,16);
]]></code.srate>
   </obj.normal>
</objdefs>