<objdefs appVersion="2.0.0">
   <obj.normal id="diffuser" uuid="C1031A8D-A6A5-4640-9440-5FA1E2FA756E">
      <sDescription>a diffuser effect, based on the elements dsp code open sourced by mutable instruments.
any bugs/issues you find are our own, report on the axoloti forum.

Thanks to Olivier Gillet from Mutable Instruments for open sourcing their code.
http://mutable-instruments.com</sDescription>
      <author>Mark Harris</author>
      <license>GPL</license>
      <inlets>
         <frac32buffer name="in"/>
      </inlets>
      <outlets>
         <frac32buffer name="out"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <file-depends/>
      <includes/>
      <depends/>
      <modules>
         <module>lmntsdiffuser</module>
      </modules>
      <code.declaration><![CDATA[float * buf;

lmntsdiffuser::C_lmnts_diffuser *diffuser;]]></code.declaration>
      <code.init><![CDATA[buf = (float*) sdram_malloc(32768*4);
if (!buf) return error_outOfMemory;
diffuser = lmntsdiffuser_factory();
diffuser->Init(buf);]]></code.init>
      <code.dispose><![CDATA[if (buf) ax_free(buf);
if (diffuser) {
	diffuser->~C_lmnts_diffuser();
	ax_free(diffuser);
}]]></code.dispose>
      <code.krate><![CDATA[static float buf[BUFSIZE];

int i;

for(i=0;i<BUFSIZE;i++){
	buf[i] = q27_to_float(inlet_in[i]);
}

diffuser->Process(buf,BUFSIZE);

for(i=0;i<BUFSIZE;i++){
	outlet_out[i] = float_to_q27(buf[i]);
}]]></code.krate>
   </obj.normal>
</objdefs>