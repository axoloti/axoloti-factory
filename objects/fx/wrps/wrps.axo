<objdefs appVersion="1.0.12">
   <obj.normal id="wrps" uuid="FCC317183-56CF-4C1D-A813-0EC4FF7DBB46">
      <sDescription>a warps-like effect, based on open source DSP code from mutable instruments.
any bugs/issues you find are our own, report on the axoloti forum.

Thanks to Olivier Gillet from Mutable Instruments for open sourcing their code.
http://mutable-instruments.com
BUG: this will not currently link, due to axo firmware issue
</sDescription>
      <author>Mark Harris</author>
      <license>GPL</license>
      <helpPatch>wrps.axh</helpPatch>
      <inlets>
         <frac32buffer name="i1"/>
         <frac32buffer name="i2"/>
      </inlets>
      <outlets>
         <frac32buffer name="out"/>
         <frac32buffer name="aux"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map name="drive1"/>
         <frac32.u.map name="drive2"/>
         <frac32.u.map name="algo"/>
         <frac32.u.map name="density"/>
      </params>
      <attribs/>
      <modules>
         <module>wrps</module>
      </modules>
      <includes/>
      <code.declaration><![CDATA[wrps::warps::Modulator processor;]]></code.declaration>
      <code.init><![CDATA[processor.Init(48000.0f); //MI = 96k]]></code.init>
      <code.krate><![CDATA[static wrps::warps::ShortFrame input[BUFSIZE];
static wrps::warps::ShortFrame output[BUFSIZE];

int i;

processor.mutable_parameters()->channel_drive[0]=q27_to_float(param_drive1);
processor.mutable_parameters()->channel_drive[1]=q27_to_float(param_drive1);
processor.mutable_parameters()->modulation_parameter=q27_to_float(param_density);
processor.mutable_parameters()->modulation_algorithm=q27_to_float(param_algo);


for(i=0;i<BUFSIZE;i++){
   input[i].l = inlet_i1[i]>> 17; 
   input[i].r = inlet_i2[i] >> 17; 
}

processor.Process(input,output,BUFSIZE);

for(i=0;i<BUFSIZE;i++){
   outlet_out[i] = output[i].l << 17;
   outlet_aux[i] = output[i].r << 17;
}]]></code.krate>
   </obj.normal>
</objdefs>
