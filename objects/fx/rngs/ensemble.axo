<objdefs appVersion="1.0.12">
   <obj.normal id="ensemble" uuid="615802b3-3def-478d-95ce-c5ac35003a55">
      <sDescription>ensemble effect from the rings dsp code open sourced by mutable instruments.
any bugs/issues you find are our own, report on the axoloti forum.

Thanks to Olivier Gillet from Mutable Instruments for open sourcing their code.
http://mutable-instruments.com</sDescription>
      <license>GPL</license>
      <inlets>
         <frac32buffer name="l"/>
         <frac32buffer name="r"/>
      </inlets>
      <outlets>
         <frac32buffer name="l"/>
         <frac32buffer name="r"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map name="amount"/>
         <frac32.u.map name="depth"/>
      </params>
      <attribs/>
      <includes>
         <include>./rings_fx.h</include>
      </includes>
      <modules>
         <module>rngs</module>
      </modules>
      <code.declaration><![CDATA[rings_fx::Ensemble ensemble;]]></code.declaration>
      <code.init><![CDATA[ensemble.Init((uint16_t*) sdram_malloc(32768));]]></code.init>
      <code.krate><![CDATA[static float left[BUFSIZE];
static float right[BUFSIZE];

int i;

ensemble.set_amount(q27_to_float(param_amount));
ensemble.set_depth(q27_to_float(param_depth));

for(i=0;i<BUFSIZE;i++){
	left[i] = q27_to_float(inlet_l[i]);
	right[i] = q27_to_float(inlet_r[i]);
}

ensemble.Process(left,right,BUFSIZE);

for(i=0;i<BUFSIZE;i++){
	outlet_l[i] = float_to_q27(left[i]);
	outlet_r[i] = float_to_q27(right[i]);
}]]></code.krate>
   </obj.normal>
</objdefs>